---
const { type, title, startDate, endDate } = Astro.props;

const formatDate = (dateString: string | null | undefined): string | null => {
  if (!dateString) return null;

  const [year, month] = dateString.split("-");
  if (!year || !month) return null; // Validate inputs

  const date = new Date(Number(year), Number(month) - 1); // Month is 0-indexed
  return new Intl.DateTimeFormat("en-US", { year: "numeric", month: "long" }).format(date);
};
---

<div
  class="grid grid-cols-1 gap-0 items-center justify-between sm:grid-cols-[max-content_1fr_max-content] sm:gap-2"
  role="group"
  aria-label={type}
>
  {title}
  <div class="hidden w-full h-[2px] bg-gray sm:block" />
  <div class="flex items-center gap-1">
    {startDate && (
      <time datetime={startDate}>{formatDate(startDate)}</time>
      <div class="text-orange">-</div>
    )}
    {endDate ? <time datetime={endDate}>{formatDate(endDate)}</time> : 'Present'}
  </div>
</div>
