---
import { Image } from "astro:assets";
import TertiaryHeadline from "./TertiaryHeadline.astro";

interface Props {
  thumbnail: ImageMetadata;
  thumbnailAlt: string;
  headline: string;
  description?: string;
  url: string;
  tags?: Array<string>;
}

const { thumbnail, thumbnailAlt, headline, description, url, tags } =
  Astro.props;
---

<a
  class="relative grid items-start gap-3 p-3 bg-mid-blue outline-none focus:outline-light-blue focus:outline-dashed focus:outline-1 hover:bg-dark-blue transition-colors duration-300 md:grid-cols-[1fr_2fr]"
  href={url}
  target="_blank"
>
  {
    thumbnail && (
      <div class="aspect-project border border-black overflow-hidden">
        <Image
          class="dynamic-loading-image w-full h-full object-contain"
          src={thumbnail}
          alt={thumbnailAlt}
          widths={[297, 689, 294]}
          sizes="(max-width: 376px) 297px, (min-width: 376px) and (max-width: 767px) 689px, (min-width: 768px) 294px"
          loading="lazy"
          quality="mid"
          data-image
        />
      </div>
    )
  }
  <div class="grid gap-1">
    {headline && <TertiaryHeadline text={headline} />}
    {description && <p>{description}</p>}
    {
      tags && (
        <ul class="flex gap-2 mt-3">
          {tags.map((tag: string) => (
            <li class="px-3 text-light-blue bg-dark-blue border-black border border-t-highlight border-l-highlight">
              {tag}
            </li>
          ))}
        </ul>
      )
    }
  </div>
</a>

<script>
  const dynamicImages = document.querySelectorAll("[data-image]");

  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach((entry) => {
      const image = entry.target;

      if (entry.isIntersecting) {
        // Switch to eager loading for images in the viewport
        image.setAttribute("loading", "eager");
        observer.unobserve(image);
      }
    });
  });

  dynamicImages.forEach((image) => observer.observe(image));
</script>
